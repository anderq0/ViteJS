import './style.scss'
// –î–ó 2 –∑–∞–¥–∞–Ω–∏–µ 2
type checkType = {
    name: string,
    count: number,
    cost: number,
}
// document.designMode = "on"

const checkList: checkType[] = [
    { name: 'cheese', count: 1, cost: 43 },
    { name: 'dog', count: 1, cost: 12 },
    { name: 'bread', count: 2, cost: 54 },
    { name: 'juice', count: 1, cost: 10 },
]

const DZ2z2Ol = document.getElementById('DZ2z2') as HTMLOListElement
function printCheck(arr: checkType[]) {
    let html = ''
    for (let el of arr) {
        html += `<li>${el.name} ${el.count} ${el.cost}</li>`
    }
    DZ2z2Ol.innerHTML = html
}

printCheck(checkList)

const DZ2z2H5Sum = document.getElementById('sumResult') as HTMLHeadElement
function getSum(arr: checkType[]) {
    let sumResult = 0
    for (let el of arr) {
        sumResult += el.cost
    }
    DZ2z2H5Sum.innerHTML += String(sumResult)
}
getSum(checkList)

const DZ2z2H5Max = document.getElementById('maxProductCost') as HTMLHeadElement
function getMaxProductCost(arr: checkType[]) {
    let maxCost = 0
    let maxCostProduct = ''
    for (let el of arr) {
        // el.cost > maxCost? maxCost = el.cost : maxCost = maxCost
        if (el.cost > maxCost) {
            maxCost = el.cost
            maxCostProduct = el.name
        }
    }
    DZ2z2H5Max.innerHTML += maxCostProduct + ' ' + String(maxCost)
}
getMaxProductCost(checkList)

const DZ2z2H5AverageCost = document.getElementById('midSum') as HTMLHeadElement
function getAverageCost(arr: checkType[]) {
    let averageCostResult = 0
    for (let el of arr) {
        averageCostResult += el.cost
    }
    averageCostResult = averageCostResult / arr.length
    DZ2z2H5AverageCost.innerHTML += String(averageCostResult)
}
getAverageCost(checkList)


//–î–ó2 –∑–∞–¥–∞–Ω–∏–µ 4

// –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ –∞—É–¥–∏—Ç–æ—Ä–∏–π –∞–∫–∞–¥–µ–º–∏–∏. –û–±—ä–µ–∫—Ç-–∞—É–¥–∏—Ç–æ—Ä–∏—è —Å–æ-
// —Å—Ç–æ–∏—Ç –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è, –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Å–∞–¥–æ—á–Ω—ã—Ö –º–µ—Å—Ç (–æ—Ç 10 –¥–æ 20) –∏
// –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–Ω–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞.

type audienceArrayType = {
    audienceName: string,
    placeQuentity: number,
    facultyName: string,
}
const audienceArray: audienceArrayType[] = [
    { audienceName: 'first audience', placeQuentity: 14, facultyName: 'Math' },
    { audienceName: 'second audience', placeQuentity: 15, facultyName: 'Language' },
    { audienceName: 'third audience', placeQuentity: 13, facultyName: 'Biology' },
    { audienceName: 'fourth audience', placeQuentity: 18, facultyName: 'Chemistry' },
    { audienceName: 'fifth audience', placeQuentity: 20, facultyName: 'Math' },
    { audienceName: 'sixth audience', placeQuentity: 20, facultyName: 'Biology' },
]

// 1 –í—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –≤—Å–µ—Ö –∞—É–¥–∏—Ç–æ—Ä–∏–π.

const DZ2z4Ol = document.getElementById('DZ2z4') as HTMLOListElement
function getAllAudiences(arr: audienceArrayType[]) {
    let html = ''
    for (let el of arr) {
        html += `<li>${el.audienceName}</li>`
    }
    DZ2z4Ol.innerHTML = html
}
getAllAudiences(audienceArray)

// 2  –í—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –∞—É–¥–∏—Ç–æ—Ä–∏–π –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞.
const FindAudienceButton = document.getElementById('findAudience') as HTMLButtonElement
const findAudienceInput = document.getElementById('findAudienceInput') as HTMLInputElement
const audienceResultH5 = document.getElementById('audienceResult') as HTMLHeadElement

function findAudience(arr: audienceArrayType[], facultyNameString: string) {
    let html = ''
    let isExist = false
    for (let el of arr) {
        if (el.facultyName.toLowerCase() == facultyNameString.toLowerCase()) {
            html += `<p>${el.audienceName}</p>`
            isExist = true
        }
    }
    if (!isExist) {
        console.log('ok')
        html += `<p style="color: red">No such audience üòû</p>`
    }
    audienceResultH5.innerHTML += html
}
FindAudienceButton.addEventListener('click', function () {
    audienceResultH5.innerHTML = ''
    findAudience(audienceArray, findAudienceInput.value)
    findAudienceInput.value = ''
})


// 3 –í—ã–≤–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω —Ç–æ–ª—å–∫–æ —Ç–µ—Ö –∞—É–¥–∏—Ç–æ—Ä–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è
// –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã. –û–±—ä–µ–∫—Ç-–≥—Ä—É–ø–ø–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è,
// –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞.
const findAudienceForGroupButton = document.getElementById('findAudienceForGroupButton') as HTMLButtonElement
const findAudienceForGroupInput = document.getElementById('findAudienceForGroupInput') as HTMLInputElement
const AudienceForGroupResult = document.getElementById('AudienceForGroupResult') as HTMLHeadElement

type groupType = {
    groupName: string,
    studentQuentity: number,
    facultyName: string,
}

const groups: groupType[] = [
    { groupName: 'genius', studentQuentity: 13, facultyName: 'Math' },
    { groupName: 'good', studentQuentity: 13, facultyName: 'Language' },
    { groupName: 'middle', studentQuentity: 13, facultyName: 'Biologu' },
    { groupName: 'bad', studentQuentity: 13, facultyName: 'Math' },
    { groupName: 'worse', studentQuentity: 13, facultyName: 'Chemistry' },
]

function findAudienceForGroup(arr: audienceArrayType[], arr2: groupType[], groupName: string) {
    let html = ''
    let isExist = false
    for (let key in arr2) {
        if (groupName == arr2[key].groupName) {
            for (let el of arr) {
                if (groupName == arr2[key].groupName && arr2[key].studentQuentity <= el.placeQuentity && arr2[key].facultyName == el.facultyName) {
                    html += `<p>${el.audienceName}</p>`
                    AudienceForGroupResult.innerHTML = html
                    isExist = true
                }

            }
        }
    }

    if (!isExist) {
        html += `<p style="color: red">No such audience üòû</p>`
        AudienceForGroupResult.innerHTML += html
    }
}

findAudienceForGroupButton.addEventListener('click', function () {
    AudienceForGroupResult.innerHTML = ''
    findAudienceForGroup(audienceArray, groups, findAudienceForGroupInput.value)
    findAudienceInput.value = ''
})

let someArray = [32, 53, 1, 77, 3]
someArray.sort((a, b) => a - b)
console.log(someArray)


// ===========================================================

// 1.1.  –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤–æ–∑–≤—Ä–∞—â–∞—é—â—é—é –º–∞—Å—Å–∏–≤ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç 0 –¥–æ 10
const arrayOfNums: number[] = []
function addArrayOfNums(arr: number[], start = 0, end = start + 10) {
    for (let i = 0; i <= 10; i++) {
        i == 0 ? arr.push(start) : i == 10 ? arr.push(end) : arr.push(i + start)
    }
    console.log(arr)
}
addArrayOfNums(arrayOfNums, 14)
// 1.2 - 1.3*. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤–æ–∑–≤—Ä–∞—â–∞—é—â—é—é –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª. –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 1 –ø–∞—Ä–∞–º–µ—Ç—Ä, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –±—É–¥—É—â–µ–º –º–∞—Å—Å–∏–≤–µ
// –î–æ–±–∞–≤–∏—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞
const ArrayOfRandomNums: number[] = []
function addArrayOfRandomNums(arr: number[], arrayLength: number) {
    for (let i = 0; i < arrayLength; i++) {
        arr.push(Math.floor(Math.random() * 100))
    }
    console.log(arr)
}
addArrayOfRandomNums(ArrayOfRandomNums, 9)

// 2.1 - 2.4
const someDiv = document.getElementById('someIdForDiv') as HTMLDivElement
function sayHelloToUser(name = 'user') {
    someDiv.innerHTML = `–ü—Ä–∏–≤–µ—Ç, ${name}!`
}
sayHelloToUser('gaya')

// –ï—Å—Ç—å –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
type employeesType = {
    name: string,
    department: string,
    salary: number
}

const employees: employeesType[] = [
    { name: '–§–µ–¥–æ—Ç–æ–≤–∞ –ê—Ä–∏–Ω–∞ –ì–ª–µ–±–æ–≤–Ω–∞', department: 'ads', salary: 2100 },
    { name: '–ì–æ–ª–∏–∫–æ–≤–∞ –ú–∞—Ä–∏—è –§–∏–ª–∏–ø–ø–æ–≤–Ω–∞', department: 'prog', salary: 3500 },
    { name: '–ü–∞–Ω–∏–Ω –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ì–µ—Ä–º–∞–Ω–æ–≤–∏—á', department: 'ads', salary: 2100 },
    { name: '–†–æ–º–∞–Ω–æ–≤ –≠–º–∏–ª—å –ú–∞–∫–∞—Ä–æ–≤–∏—á', department: 'prog', salary: 3100 },
    { name: '–°–º–∏—Ä–Ω–æ–≤ –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á', department: 'prog', salary: 3800 },
    { name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∞ –ú–∞–π—è –í—è—á–µ—Å–ª–∞–≤–æ–≤–Ω–∞', department: 'prog', salary: 4500 },
    { name: '–ö—Ä—ã–ª–æ–≤ –ë–æ–≥–¥–∞–Ω –ú–∞–∫—Å–∏–º–æ–≤–∏—á', department: 'disign', salary: 2100 },
    { name: '–ú—É—Ö–∏–Ω–∞ –ê–π—à–∞ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤–Ω–∞', department: 'disign', salary: 2100 },
]

// 3.1. –°–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –º–∞—Å—Å–∏–≤ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤, –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –º–∞—Å—Å–∏–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –æ—Ç–¥–µ–ª–æ–≤ (department)
function departmentUnqiue(arr: employeesType[]) {
    const departmentUniqueArray: string[] = []
    arr.forEach(el => {
        if (!departmentUniqueArray.includes(el.department)) {
            departmentUniqueArray.push(el.department)
        }
    })
    return departmentUniqueArray
}
console.log('Unique department: ', departmentUnqiue(employees))



// 3.2. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –º–∞—Å—Å–∏–≤ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∏ –∫–ª—é—á –æ–±—ä–µ–∫—Ç–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Å–¥–µ–ª–∞—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –º–∞—Å—Å–∏–≤–∞
// –£—á–µ—Å—Ç—å, —á—Ç–æ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –ø—Ä–∏ –ø–æ–º–æ—â–∏ –º–µ—Ç–æ–¥–∞ localeCompare, –∞ —á–∏—Å–ª–æ–≤—ã–µ,- –≤—ã—á–∏—Ç–∞–Ω–∏–µ–º
function sortEmployers(arr: employeesType[], key: 'name' | 'department' | 'salary') {
    if (key == 'name' || key == 'department') {
        arr.sort((a, b) => a[key].localeCompare(b[key]))
    } else if (key == 'salary') {
        arr.sort((a, b) => a.salary - b.salary)
    }
    console.log([...arr])
}
sortEmployers(employees, 'salary')

// 3.3. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∞–Ω–∞–ª–æ–≥–∏—á–Ω—É—é –æ–ø–∏—Å–∞–Ω–Ω–æ–π –≤ –∑–∞–¥–∞–Ω–∏–∏ 2.2., –Ω–æ —Å–æ—Ä—Ç–∏—Ä—É—é—â—É—é –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
function sortEmployersReverse(arr: employeesType[], key: 'name' | 'department' | 'salary') {
    sortEmployers(arr, key)
    console.log([...arr.reverse()])
}
sortEmployersReverse(employees, 'salary')


// 3.4. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –º–∞—Å—Å–∏–≤ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∏ –∏–º—è, –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –æ–±—ä–µ–∫—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–ª–∏ undefined
function findEmployerObject(arr: employeesType[], name: string) {
    for (let el of arr) {
        el.name == name ? console.log(el) : el.name
    }
}
findEmployerObject(employees, '–§–µ–¥–æ—Ç–æ–≤–∞ –ê—Ä–∏–Ω–∞ –ì–ª–µ–±–æ–≤–Ω–∞')
findEmployerObject(employees, 'sgudfyuew')
// 3.5. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –º–∞—Å—Å–∏–≤ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–∞, –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–æ–ª—å–∫–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞
function getAllEmployersByDepartment(arr: employeesType[], departmentTo: string) {
    let AllEmployersByDepartment: employeesType[] = []
    for (let el of arr) {
        el.department == departmentTo ? AllEmployersByDepartment.push(el) : AllEmployersByDepartment
    }
    console.log(AllEmployersByDepartment)
    return AllEmployersByDepartment
}
getAllEmployersByDepartment(employees, 'prog')
// 3.6. –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –ø—Ä–∏–Ω–∏–º–∞—é—â—É—é –º–∞—Å—Å–∏–≤ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â—É—é —Å—É–º–º—É –∑–∞—Ä–ø–ª–∞—Ç. –í—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø–æ –∫–∞–∂–¥–æ–º—É –æ—Ç–¥–µ–ª—É –∏ –ø–æ –æ–±—â–µ–º—É –º–∞—Å—Å–∏–≤—É
let salaryArray = 0
function getSalaryOfEmployers(arr: employeesType[], departmentTo = 'any') {
    for (let el of arr) {
        el.department == departmentTo ? salaryArray += el.salary : departmentTo == 'any' ? salaryArray = arr.reduce((sum, salary) => sum + salary.salary, 0) : salaryArray
    }
    console.log(salaryArray)
}
getSalaryOfEmployers(employees, 'ads')
getSalaryOfEmployers(employees, 'prog')


// 3.7. –í HTML —Å–æ–∑–¥–∞—Ç—å div –¥–ª—è –∫–Ω–æ–ø–æ–∫, –∑–∞–¥–∞—Ç—å –µ–º—É id –∏ –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç div'a –≤ js, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –∑–∞–¥–∞–Ω–∏—é 2.2.

// 3.8. –¢–∞–∫ –∂–µ –∫–∞–∫ –≤ 3.7 —Å–æ–∑–¥–∞—Ç—å ul (as HTMLUListElement) –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∏ div –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—É–º–º—ã –∑–∞—Ä–ø–ª–∞—Ç
const tableForEmployeesZadanie = document.getElementById('tableForEmployees') as HTMLTableElement
const DivForSumSalaryZadanie = document.getElementById('DivForSumSalary') as HTMLDivElement


const someSalarySum = employees.reduce((acumulator, currentValue) => acumulator + currentValue.salary, 0)
console.log(someSalarySum)

function getArrayOfEmployees(arr: employeesType[]) {
    let salarySum = 0
    let html = '<thead> <tr> <th>–ò–º—è</th> <th>–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç</th> <th>–ó–∞—Ä–ø–ª–∞—Ç–∞</th> </tr></thead><tbody>'
    for (let el of arr) {
        html += `<tr><td>${el.name}</td>    <td>${el.department}</td>   <td>${el.salary} </td></tr>`
        salarySum += el.salary
    }
    tableForEmployeesZadanie.innerHTML = html + `</thead>`
    DivForSumSalaryZadanie.innerHTML = `<b>Final Sum Of Salaries: </b>` + String(salarySum)

}
getArrayOfEmployees(employees)

// 3.9. –ò—Å–ø–æ–ª—å–∑—É—è –º–∞—Å—Å–∏–≤, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –≤ 3.1. –í—ã–≤–µ—Å—Ç–∏ –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –æ—Ç–¥–µ–ª–æ–≤ + –∫–Ω–æ–ø–∫—É "–í—Å–µ –æ—Ç–¥–µ–ª—ã"
//      –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å data-–∞—Ç—Ä–∏–±—É—Ç (data-dep), –≤ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–µ—Å—Ç–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–∞. –î–ª—è –∫–Ω–æ–ø–∫–∏ "–í—Å–µ –æ—Ç–¥–µ–ª—ã" data-dep="all"
const buttonDivs = document.getElementById('butDivs') as HTMLDivElement

function renderButtons(arr: string[]) {
    let html = ''
    for (let el of arr) {
        html += `<button style="background-color: #316680; width: 80px; color: white; border-color: #316680; border-width: 5px;
    margin-left: 20px; margin-bottom: 5px;" data-dep="${el}">${el.toUpperCase()}</button>`
    }
    html += `<button style="background-color: #316680; width: 80px; color: white; border-color: #316680; border-width: 5px;
  margin-left: 20px; margin-bottom: 5px;" data-dep="all">ALL</button>`
    buttonDivs.innerHTML = html
}

renderButtons(departmentUnqiue(employees))
buttonDivs.addEventListener('click', function (e) {
    const target = e.target as HTMLElement
    if (target.tagName == 'BUTTON' && target.dataset.dep) {
        if (target.dataset.dep == 'all') {
            getArrayOfEmployees(employees)
        } else {
            getArrayOfEmployees(getAllEmployersByDepartment(employees, target.dataset.dep))
        }
    }
})

// !======================================================================================================================
console.log(15..toString())


// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 2 —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –∏—Ö –¥–ª–∏–Ω—É. 
function wordLengthCompare(str1: string, str2: string) {
    return str1.length > str2.length ? 1 : str1.length < str2.length ? -1 : 0
}
console.log(wordLengthCompare('wdjf', 'sfsfrs'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
function firstWordToUpperCase(str: string) {
    return str[0].toUpperCase() + str.slice(1)
}
console.log(firstWordToUpperCase('blablabla'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–ª–∞—Å–Ω—ã—Ö –±—É–∫–≤ –≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
function countVowelLetter(str: string) {
    let count = 0
    const vowelLetter = /['eyuoai']/gi
    for (let i = 0; i < str.length; i++) {
        str[i].match(vowelLetter) ? count++ : count
    }
    return count
}
console.log(countVowelLetter('count this SHIT'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ø–∞–º–∞ –≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
function spamIdentifier(str: string) {
    let spamArray = ['100% –±–µ—Å–ø–ª–∞—Ç–Ω–æ', '—É–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂', '—Ç–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è', '–Ω–µ —É–¥–∞–ª—è–π—Ç–µ', 'xxx']
    for (let i = 0; i < spamArray.length; i++) {
        return str.includes(spamArray[i]) ? true : false
    }
}
console.log(spamIdentifier('wfjoiwrfjow 100% –±–µ—Å–ø–ª–∞—Ç–Ω–æ'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏.
function splitStringByMaxSize(str: string, maxSize: number) {
    if (maxSize < str.length) {
        str = str.slice(0, maxSize) + '...'
        return str
    } else {
        return str
    }
}
console.log(splitStringByMaxSize('Hello, world', 8))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.
function palindromCheck(str: string) {
    let str2 = str.toLowerCase().split('').reverse().join('')
    return str2 == str.toLowerCase()
}
console.log(palindromCheck('–§–õ–ª—Ñ'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏.
function countWordsInString(str: string) {
    return str.split(/[^-.'A-Za-z–ê-–Ø–∞-—è–Å—ë1-9]+/)
}
console.log(countWordsInString('–ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏.'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.
function getTheMostLargeWordInString(str: string) {
    let strArray = str.split(/[^-'A-Za-z–ê-–Ø–∞-—è–Å—ë1-9]+/)
    return strArray.sort((a, b) => b.length - a.length)[0]
}
console.log(getTheMostLargeWordInString('–ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç —Å—Ä–µ–¥–Ω—é—é –¥–ª–∏–Ω—É —Å–ª–æ–≤–∞ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏.
function getAverageWordLength(str: string) {
    let strArray = str.split(/[^-'.A-Za-z–ê-–Ø–∞-—è–Å—ë0-9]+/).length
    let lengthCount = 0
    for (let el = 0; el < str.length; el++) {
        str[el].match(/[A-Za-z–ê-–Ø–∞-—è–Å—ë1-9]+/) ? lengthCount++ : lengthCount
    }
    return Math.floor(lengthCount / strArray)
}
console.log(getAverageWordLength('–ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç–∞–µ—Ç —Å—Ä–µ–¥–Ω—é—é –¥–ª–∏–Ω—É —Å–ª–æ–≤–∞ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏.'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ —Å–∏–º–≤–æ–ª –∏ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω–¥–µ–∫—Å—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —ç—Ç–æ—Ç —Å–∏–º–≤–æ–ª –≤
// —Å—Ç—Ä–æ–∫–µ. –¢–∞–∫–∂–µ –≤—ã–≤–µ—Å—Ç–∏, —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ —Ä–∞–∑ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —ç—Ç–æ—Ç —Å–∏–º–≤–æ–ª –≤ —Å—Ç—Ä–æ–∫–µ.
function getSymbolId(str: string, sym: string) {
    let pos = -1
    let result = []
    while ((pos = str.indexOf(sym, pos + 1)) != -1) {
        result.push(pos)
    }
    return result + ' - ' + result.length
}
console.log(getSymbolId('–∏—Ç–∞–∫4 –ø–µ—Ä–≤–æ–µ –ø–æ–ø4–∞–¥–∞–Ω–∏–µ 4', '4'))

// ! –î–∑ –∑–∞ 11 –∞–ø—Ä–µ–ª—è

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤—ã–≤–æ–¥–∏—Ç
// —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ –Ω–µ–π: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä –∏
// –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–≥–∏—Ö –∑–Ω–∞–∫–æ–≤.
const fingStringStatistic = document.getElementById('fingStringStatistic') as HTMLInputElement
const fingStringStatisticButton = document.getElementById('fingStringStatisticButton') as HTMLButtonElement
const listStatistic = document.getElementById('listStatistic') as HTMLUListElement

function stringStatictis(str: string) {
    let letterCounter = 0
    let numCounter = 0
    let otherSymbolCounter = 0
    for (let el = 0; el < str.length; el++) {
        str[el].match(/[A-Za-z–ê-–Ø–∞-—è–Å—ë]+/) ? letterCounter++ : letterCounter
        str[el].match(/[0-9]/) ? numCounter++ : numCounter
        str[el].match(/[^a-zA-Z–∞-—è–ê-–Ø–Å—ë0-9 ]/) ? otherSymbolCounter++ : otherSymbolCounter
    }
    listStatistic.innerHTML = `<p>This is stat for: <br> ${str}</p><li>Nums quentity: ${numCounter}</.><li>Letters quentity: ${letterCounter}</li><li>Other symbols quentity: ${otherSymbolCounter}</li>`
}

fingStringStatisticButton.addEventListener('click', function () {
    stringStatictis(fingStringStatistic.value)
    fingStringStatistic.value = ''
})

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤—É–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ.–ù–∞–ø—Ä–∏–º–µ—Ä: 35 ‚Äì —Ç—Ä–∏–¥—Ü–∞—Ç—å –ø—è—Ç—å, 89 ‚Äì –≤–æ—Å–µ–º—å–¥–µ—Å—è—Ç –¥–µ–≤—è—Ç—å,
// 12 ‚Äì –¥–≤–µ–Ω–∞–¥—Ü–∞—Ç—å.
function getStringNum(num: number) {
    let unitNum = ['–æ–¥–∏–Ω', '–¥–≤–∞', '—Ç—Ä–∏', '—á–µ—Ç—ã—Ä–µ', '–ø—è—Ç—å', '—à–µ—Å—Ç—å', '—Å–µ–º—å', '–≤–æ—Å–µ–º—å', '–¥–µ–≤—è—Ç—å']
    let strangeDecades = ['–¥–µ—Å—è—Ç—å', '–æ–¥–∏–Ω–Ω–∞–¥—Ü–∞—Ç—å', '–¥–≤–µ–Ω–∞–¥—Ü–∞—Ç—å', '—Ç—Ä–∏–Ω–∞–¥—Ü–∞—Ç—å', '—á–µ—Ç—ã—Ä–Ω–∞–¥—Ü–∞—Ç—å', '–ø—è—Ç–Ω–∞–¥—Ü–∞—Ç—å', '—à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç—å', '—Å–µ–º—å–Ω–∞–¥—Ü–∞—Ç—å', '–≤–æ—Å–µ–º—å–Ω–∞–¥—Ü–∞—Ç—å', '–¥–µ–≤—è—Ç–Ω–∞—Ü–∞—Ç—å']
    let decades = ['–¥–≤–∞–¥—Ü–∞—Ç—å', '—Ç—Ä–∏–¥—Ü–∞—Ç—å', '—Å–æ—Ä–æ–∫', '–ø—è—Ç—å–¥–µ—Å—è—Ç', '—à–µ—Å—Ç—å–¥–µ—Å—è—Ç', '—Å–µ–º—å–¥–µ—Å—è—Ç', '–≤–æ—Å–µ–º—å–¥–µ—Å—è—Ç', '–¥–µ–≤—è–Ω–æ—Å—Ç–æ']
    const isMinus = num < 0 ? '–º–∏–Ω—É—Å ' : ''
    if (Math.abs(num) < 10) {
        return isMinus + unitNum[Math.abs(num) - 1]
    }
    else if (Math.abs(num) < 20 && Math.abs(num) > 9) {
        return isMinus + strangeDecades[Math.abs(num) - 10]
    } else if (Math.abs(num) >= 20 && Math.abs(num) <= 99) {
        if (Math.abs(num) % 10 == 0) {
            return isMinus + decades[(Math.abs(num) / 10) - 2]
        } else {
            return isMinus + decades[Math.floor(Math.abs(num) / 10) - 2] + ' ' + unitNum[Math.abs(num) % 10 - 1]
        }
    }
}
console.log(getStringNum(-1))
console.log(getStringNum(-32))
console.log(getStringNum(32))
console.log(getStringNum(-16))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–º–µ–Ω—è–µ—Ç –≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
// –±–æ–ª—å—à–∏–µ –±—É–∫–≤—ã –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ, –º–∞–ª–µ–Ω—å–∫–∏–µ ‚Äì –Ω–∞ –±–æ–ª—å—à–∏–µ, –∞
// —Ü–∏—Ñ—Ä—ã ‚Äì –Ω–∞ –∑–Ω–∞–∫ –Ω–∏–∂–Ω–µ–≥–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è.
function smallToLargetoSmall(str: string) {
    let newString = ''
    for (let el = 0; el < str.length; el++) {
        if (str[el].match(/[A-Z–ê-–Ø–Å]+/)) {
            newString += str[el].toLowerCase()
        } else if (str[el].match(/[a-z–∞-—è—ë]/)) {
            newString += str[el].toUpperCase()
        } else if (str[el].match(/[0-9]/)) {
            newString += '_'
        } else {
            newString += str[el]
        }
    }
    return newString
}
console.log(smallToLargetoSmall('Some StrAnGe sENTence 42!!3'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è css-—Å—Ç–∏–ª–µ–π —Å –¥–µ—Ñ–∏—Å–æ–º –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤ –°amel–°ase 

function camelCaseConvert(str: string) {
    for (let i = 0; i < str.length; i++) {
        if (str[i] == '-') {
            str = str.replace('-' + str[i + 1], str[i + 1].toUpperCase())
        }
    }
    return str
}
console.log(camelCaseConvert('cherepashka-ninja'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ
// –∏ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ –≤ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—É.
function getAbbreviation(str: string) {
    return str.split(/[ -]+/).map(i => i[0].toUpperCase()).join('')
}
console.log(getAbbreviation('d-aaaaa---m n'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫, –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –∏—Ö –≤ –æ–¥–Ω—É –¥–ª–∏–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏
// –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–µ.
let getOneStrintArrow = (...str: string[]) => str.join(' ')
console.log(getOneStrintArrow('bla', 'bla', 'fehiofe', 'smsmsm', ' sjsj, sksk'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é ‚Äì –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä. –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç
// —Å—Ç—Ä–æ–∫—É —Å –ø—Ä–∏–º–µ—Ä–æ–º, –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
// –≤—ã–ø–æ–ª–Ω–∏—Ç—å (+ - * /), –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –æ–ø–µ—Ä–∞–Ω–¥—ã –≤ —á–∏—Å–ª–∞, —Ä–µ—à–∞–µ—Ç
// –ø—Ä–∏–º–µ—Ä –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
function stringCalcualtor(str: string) {
    let stringCalculate = str.split(/(\+|\-|\*|\/)/)
    for (let el = 0; el < stringCalculate.length; el++) {
        if (stringCalculate[el] == '+') {
            return +stringCalculate[el - 1] + +stringCalculate[el + 1]
        } else if (stringCalculate[el] == '-') {
            return +stringCalculate[el - 1] - +stringCalculate[el + 1]
        }
        else if (stringCalculate[el] == '/') {
            return +stringCalculate[el - 1] / +stringCalculate[el + 1]
        }
        else if (stringCalculate[el] == '*') {
            return +stringCalculate[el - 1] * +stringCalculate[el + 1]
        }
    }
}
console.log(stringCalcualtor('3678+45'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç url –∏ –≤—ã–≤–æ–¥–∏—Ç –ø–æ–¥-
// —Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.
// –ù–∞–ø—Ä–∏–º–µ—Ä: url ‚Äúhttps://itstep.org/ua/about‚Äù, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
// ‚Äú–ø—Ä–æ—Ç–æ–∫–æ–ª: https, –¥–æ–º–µ–Ω: itstep.org, –ø—É—Ç—å: /ua/about‚Äù.
function getInfoAboutUrl(str: string) {
    let newStr = str.split('://')
    console.log(newStr)
    let protocol = newStr[0]
    let domain = newStr[1].split('/')[0]
    let way = newStr[1].split('/').slice(1).join('/')
    return `–ø—Ä–æ—Ç–æ–∫–æ–ª: ${protocol} –¥–æ–º–µ–Ω: ${domain} –ø—É—Ç—å-: /${way}`
}
console.log(getInfoAboutUrl('https://itstep.org/ua/about'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ —Ä–∞–∑–¥–µ–ª–∏-
// —Ç–µ–ª—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ø–æ–¥—Å—Ç—Ä–æ–∫, —Ä–∞–∑–±–∏—Ç—ã—Ö —Å –ø–æ–º–æ—â—å—é
// —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è.
function splitStringWithoutSeparator(str: string, separator: string) {
    let splitedString = []
    let result = ''
    for (let el = 0; el < str.length; el++) {
        if (str[el] == separator) {
            splitedString.push(result)
            result = ''
        }
        if (str[el] != separator) {
            result += str[el]
        }
    }
    splitedString.push(result)
    return splitedString
}
console.log(splitStringWithoutSeparator('10/08/2020', '/'))

// –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —à–∞–±–ª–æ–Ω—É.
// –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–µ—Ä–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º —à–∞–±–ª–æ–Ω, –≤ —Ç–µ–∫—Å—Ç–µ
// –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è %, –ø–æ—Å–ª–µ —Å–∏–º–≤–æ–ª–∞ % —É–∫–∞-
// –∑—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–µ–∫—Å –≤—Ö–æ–¥–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞. –ü—Ä–∏ –≤—ã–≤–æ–¥–µ –≤–º–µ—Å—Ç–æ
// %–∏–Ω–¥–µ–∫—Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ
// –≤—Ö–æ–¥–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞.
// –ù–∞–ø—Ä–∏–º–µ—Ä: print(‚ÄúToday is %1 %2.%3.%4‚Äù, ‚ÄúMonday‚Äù, 10,
// 8, 2020) –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ ‚ÄúToday is Monday 10.8.2020‚Äù.
function stringByTemplate(template: string, ...str: string[]) {
    for (let i = 0; i < str.length; i++) {
        template = template.replace('%' + (i + 1), str[i])
    }
    return template
}
console.log(stringByTemplate('Today is %1 %2.%3.%4', 'Monday', '10', '8', '2020'))
console.log(stringByTemplate('%1 is my %2 %3 %5', ...['JS', 'best', 'lang', 'dasda', 'sfdds']))

// ! –î–ó –∫–ª–∞—Å—Å—ã =====================================================
// ?–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –ø—Ä–æ—Å—Ç–æ–π –º–∞—Ä–∫–µ—Ä. –í –∫–ª–∞—Å—Å–µ
// ?–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –∑–∞–ø—Ä–∞–≤–ª—è—é—â–∏–π—Å—è –º–∞—Ä–∫–µ—Ä,
// ?—É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–≤ –µ–≥–æ –æ—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –º–∞—Ä–∫–µ—Ä–∞ –∏ –¥–æ–±–∞–≤–∏–≤ –º–µ—Ç–æ–¥ –¥–ª—è –∑–∞–ø—Ä–∞–≤–∫–∏ –º–∞—Ä–∫–µ—Ä–∞.
const divClasses = document.getElementById('dzClasses') as HTMLDivElement
class Marker {
    color: string
    ink: number
    constructor(color: string, ink: number) {
        this.color = color
        this.ink = ink
    }
    print(str: string): void {
        let actualString = ''
        let html = ''
        for (let char of str) {
            if (this.ink - 0.5 >= 0) {
                if (char != ' ') {
                    actualString += char
                    this.ink = this.ink - 0.5
                } else {
                    actualString += char
                }

            }
        }
        html = `<p style="color:${this.color}; font-size: 20px"> ${actualString} </p>`
        divClasses.innerHTML += html
    }
}
let firstMarker = new Marker('black', 6)
firstMarker.print('Edgar is an Epic Brawler who could be unlocked for free ')

class RefuelingMarker extends Marker {
    refuel() {
        this.ink = 100
    }
}
let secondMarker = new RefuelingMarker('red', 10)
secondMarker.print('Leon is a Legendary Brawler who has moderate health and a high damage output at close range.')
secondMarker.refuel()

// –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å ExtendedDate, —É–Ω–∞—Å–ª–µ–¥–æ–≤–∞–≤ –µ–≥–æ –æ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç-
// –Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ Date –∏ –¥–æ–±–∞–≤–∏–≤ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
class DateClass {
    day: number
    month: number
    year: number
    constructor(day: number, month: number, year: number) {
        this.day = day
        this.month = month
        this.year = year
    }
}
class ExtendedDate extends DateClass {
    dateToString() {
        return 'DATE -  ' + new Date(this.year, this.month - 1, this.day).toLocaleString('en', { month: 'long', day: "numeric" })
    }
    isDateFuture() {
        return 'IS DATE IN FUTURE? ' + (new Date(this.year, this.month, this.day) >= new Date() ? false : true)
    }
    isLeapYear() {
        return 'IS LEAP YEAR? ' + (this.year / 4 ? true : false)
    }
}

const extData = new ExtendedDate(4, 5, 2024)
console.log(extData.dateToString())
console.log(extData.isDateFuture())
console.log(extData.isLeapYear())
console.log(extData)


// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å. 
class Circle {
    radius: number
    constructor(radius: number) {
        this.radius = radius
    }
    getRadius() {
        return 'RADIUS ' + this.radius
    }
    setRadius(newRadius: number) {
        this.radius = newRadius
    }
    getDiametr() {
        return 'DIAMETR ' + this.radius * 2
    }
    getSquare() {
        return 'SQUARE ' + 3.14 + Math.pow(this.radius, 2)
    }
    getLength() {
        return 'LENGTH ' + 3.14 + 2 * this.radius
    }
}
const firstCircle = new Circle(10)
console.log(firstCircle.getDiametr())
console.log(firstCircle.getLength())
console.log(firstCircle.getRadius())
console.log(firstCircle.getSquare())
firstCircle.setRadius(12)
console.log(firstCircle.getDiametr())
console.log(firstCircle.getLength())
console.log(firstCircle.getRadius())
console.log(firstCircle.getSquare())


//!  –î–ó 2.4 ---------------------------------------------------------------------------
{

    class HtmlElement {
        tag: string
        isSingle: boolean
        text: string
        atributes = [] as any[]
        styles = [] as any[]
        elements = [] as HtmlElement[]
        constructor(tag: string, text = '') {
            const singleArr = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr']
            this.tag = tag
            this.text = text
            this.isSingle = singleArr.includes(tag) ? true : false
        }
        setAtribute(name: string, value: string) {
            this.atributes.push({ name, value })
        }
        setStyle(name: string, value: string) {
            this.styles.push({ name, value })
        }
        prepend(el: HtmlElement) {
            this.elements.unshift(el)
        }
        append(el: HtmlElement) {
            this.elements.push(el)
        }
        getHtml(): string {
            const styles = this.styles.map(el => el.name + ':' + el.value).join(';')
            const attrCopy = [...this.atributes]
            if (this.styles.length) {
                attrCopy.push({ name: 'style', value: styles })
            }
            if (this.isSingle) {
                if (this.text) {
                    attrCopy.push({ name: 'area-label', value: this.text })
                }
                const atributes = attrCopy.map(el => el.name + '="' + el.value + '"').join(' ')
                return `<${this.tag} ${atributes}>`
            } else {
                const atributes = attrCopy.map(el => el.name + '="' + el.value + '"').join(' ')
                return `<${this.tag} ${atributes}>${this.text}${this.elements.map(el => el.getHtml()).join('\n')}</${this.tag}>`
            }
        }
    }

    const wrapper = new HtmlElement('div')
    wrapper.setAtribute('id', 'wrapper')
    wrapper.setStyle('display', 'flex')

    const div = new HtmlElement('div')
    div.setStyle('width', '300px')
    div.setStyle('margin', '10px')

    const h3 = new HtmlElement('h3', 'Stranger')

    const img = new HtmlElement('img')
    img.setStyle('width', '100%')
    img.setAtribute('src', 'https://yt3.googleusercontent.com/bRxpLuKan-5TAGEdooDE35CTPXr-59xEhwlt_w1BHY2rzc1hQBdpfVLo0a95p9bYbBObUkmsfw=s900-c-k-c0x00ffffff-no-rj')
    img.setAtribute('alt', 'Stranger')

    const p = new HtmlElement('p', '–≥–µ–Ω–∏–π, –º–∏–ª–ª–∏–∞—Ä–¥–µ—Ä, –ø–ª–µ–π–±–æ–π, —Ñ–∏–ª–∞–Ω—Ç—Ä–æ–ø')
    p.setStyle('text-align', 'justify')
    p.setStyle('font-size', '20px')

    const a = new HtmlElement('a', ' Who?...')
    a.setStyle('color', 'white')
    a.setStyle('font-size', '20px')
    a.setAtribute('href', 'https://en.wikipedia.org/wiki/Pavel_Durov')
    a.setStyle('cursor', 'pointer')
    a.setAtribute('target', '_blank')

    p.append(a)

    div.append(img)
    div.append(p)
    div.prepend(h3)

    wrapper.append(div)
    wrapper.append(div)

    const heDiv = document.getElementById('he') as HTMLDivElement

    class CssClass {
        className: string
        stylesArray = [] as any[]
        elements = [] as CssClass[]
        constructor(className: string) {
            this.className = className
        }
        setStyle(name: string, value: string) {
            this.stylesArray.push({ name, value })
        }
        deleteStyle(name: string) {
            for (let el = 0; el < this.stylesArray.length; el++) {
                if (this.stylesArray[el].includes(name)) {
                    this.stylesArray.splice(el, 2)
                }
            }
        }
        append(el: CssClass) {
            this.elements.push(el)
        }
        getCss(): string {
            const styles = this.stylesArray.map(el => el.name + ':' + el.value).join(';\n')
            let html = ''
            if (this.elements.length > 0) {
                for (let i = 0; i < this.elements.length; i++) {
                    html += this.elements[i].getCss()
                }
            } else {
                html = this.className + '{\n' + styles + ';\n}\n'
            }
            return html
        }
    }
    const mainStyle = new CssClass('mainClass')
    const wrap = new CssClass('wrap')
    wrap.setStyle('display', 'flex')
    mainStyle.append(wrap)

    const block = new CssClass('block')
    block.setStyle('width', '300px')
    block.setStyle('margin', '10px')
    mainStyle.append(block)

    const imgCss = new CssClass('img')
    imgCss.setStyle('margin', '100px')
    imgCss.setStyle('width', '100px')
    mainStyle.append(imgCss)

    const text = new CssClass('text')
    text.setStyle('text-align', 'justify')
    mainStyle.append(text)

    class HtmlBlock {
        styleCollections: CssClass[]
        htmlRoot: HtmlElement
        constructor(styleCollections: CssClass[], htmlRoot: HtmlElement) {
            this.styleCollections = styleCollections
            this.htmlRoot = htmlRoot
        }
        getCode() {
            // document.head.insertAdjacentHTML("beforeend", `<style>${this.styleCollections}</style>`)
            let css = this.styleCollections.map(el => el.getCss())
            let html = `<style>${css}</style>`
            html += this.htmlRoot.getHtml()
            return html
        }
    }

    const result = new HtmlBlock([mainStyle], wrapper)
    heDiv.innerHTML = result.getCode()

}
// ! KRESTIK --------------
{
    function krestik(x: number) {
        let sting = ''
        for (let i = 0; i <= x - 1; i++) {
            for (let j = 0; j <= x - 1; j++) {
                if (i == j || i + j + 1 == x) {
                    sting += '*'
                }
                else {
                    sting += ' '
                }
            }
            sting += '\n'
        }
        return sting
    }
    console.log(krestik(6))
}

// ! TIMEOUT AND INTERVAL ---------------------------------------------------------------------------------------------------------------------
{
    function printNumbersInterval(from: number, to: number) {
        let current = from

        let intervalId = setInterval(() => {
            console.log(current)
            if (current == to) {
                clearInterval(intervalId)
            } else {
                current++
            }
        }, 1000)
    }
    // printNumbersInterval(1, 3)

    function printNumbersTimeout(from: number, to: number) {
        let current = from--
        console.log(current)
        if (current != to) {
            setTimeout(printNumbersTimeout, 1000, ++current, to)
        }
    }
    // printNumbersTimeout(4,6)
    // setTimeout(() => printNumbersTimeout(4, 6), 4000)

    //?? https://disk.yandex.ru/d/LADtnZajP19xeQ
}

// ! –ü—Ä–∞–∫—Ç–∏–∫–∞ ------------------------------------------------------
{
    //     –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å PrintMachine, –∫–æ—Ç–æ—Ä–æ–π —Å–æ—Å—Ç–æ–∏—Ç –∏–∑:
    //          ‚ñ† —Ä–∞–∑–º–µ—Ä–∞ —à—Ä–∏—Ñ—Ç–∞;
    //          ‚ñ† —Ü–≤–µ—Ç–∞ —à—Ä–∏—Ñ—Ç–∞;
    //          ‚ñ† —Å–µ–º–µ–π—Å—Ç–≤–∞ —à—Ä–∏—Ñ—Ç–∞;
    //          ‚ñ† –º–µ—Ç–æ–¥–∞ print(), –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏ –ø–µ—á–∞—Ç–∞–µ—Ç –µ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —à—Ä–∏—Ñ—Ç–æ–º —Å –ø–æ–º–æ—â—å—é
    //     –°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç —Ç–∞–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É

    const input = document.getElementById('printMachine') as HTMLInputElement
    const dispay = document.getElementById('display') as HTMLDivElement

    input.addEventListener('input', function () {
        const text = input.value
        dispay.innerHTML = ''
        let inkAmount = 1
        for (let i = 0; i < text.length; i++) {
            const span = document.createElement('span')
            span.textContent = text[i];
            if (inkAmount != 0) {
                const color = `${inkAmount - 0.04}`
                span.style.opacity = color

                dispay.appendChild(span)
                inkAmount = inkAmount - 0.04 >= 0 ? (inkAmount - 0.04) : 0
            } else {
                dispay.innerHTML = 'Inks are spent :( '
            }

        }

    })
    // https://learn.javascript.ru/closure?ysclid=lw6otra9ho90909433


}
{
    // !  DZ Employee
    const tableRandom = document.getElementById('tableRandom') as HTMLTableElement
    type empType = {
        name: string
        department: string
        salary: number
    }
    class Employee {
        name: string
        department: string
        salary: number
        constructor(name: string, department: string, salary: number) {
            this.name = name
            this.salary = salary
            this.department = department
        }
    }

    const employees: empType[] = [
        new Employee('–§–µ–¥–æ—Ç–æ–≤–∞ –ê—Ä–∏–Ω–∞ –ì–ª–µ–±–æ–≤–Ω–∞', 'ads', 2100),
        new Employee('–ú—É—Ö–∏–Ω–∞ –ê–π—à–∞ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–≤–Ω–∞', 'disign', 2100),
        new Employee('–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∞ –ú–∞–π—è –í—è—á–µ—Å–ª–∞–≤–æ–≤–Ω–∞', 'prog', 4500),
        new Employee('–ö—Ä—ã–ª–æ–≤ –ë–æ–≥–¥–∞–Ω –ú–∞–∫—Å–∏–º–æ–≤–∏—á', 'disign', 2100),
        new Employee('–†–æ–º–∞–Ω–æ–≤ –≠–º–∏–ª—å –ú–∞–∫–∞—Ä–æ–≤–∏—á', 'prog', 3100),
        new Employee('–§–µ–¥–æ—Ç–æ–≤–∞ –ê—Ä–∏–Ω–∞ –ì–ª–µ–±–æ–≤–Ω–∞', 'ads', 2100),
        new Employee('–§–µ–¥–æ—Ç–æ–≤–∞ –ê—Ä–∏–Ω–∞ –ì–ª–µ–±–æ–≤–Ω–∞', 'ads', 2100)
    ]
    class EmpTable {
        arr: empType[]
        constructor(arr: empType[]) {
            this.arr = arr
        }
        getHtml() {
            let html = '<thead> <tr> <th>–ò–º—è</th> <th>–î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç</th> <th>–ó–∞—Ä–ø–ª–∞—Ç–∞</th> </tr></thead><tbody>'
            for (let el of this.arr) {
                html += `<tr><td>${el.name}</td>    <td>${el.department}</td>   <td>${el.salary} </td></tr>`
            }
            tableRandom.innerHTML = html + `</thead>`
        }
    }
    let firstTable = new EmpTable(employees)
    firstTable.getHtml()
}

{
    //! –î–ó –° LEARN JS
    //?     –°–¥–µ–ª–∞–π—Ç–µ –≤—Å–µ –≤–Ω–µ—à–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –æ—Ä–∞–Ω–∂–µ–≤—ã–º–∏, –∏–∑–º–µ–Ω—è—è –∏—Ö —Å–≤–æ–π—Å—Ç–≤–æ style.
    // ?     –°—Å—ã–ª–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –≤–Ω–µ—à–Ω–µ–π, –µ—Å–ª–∏:
    //  ?    –ï—ë href —Å–æ–¥–µ—Ä–∂–∏—Ç ://
    // ?     –ù–æ –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http://internal.com.
    let link = document.querySelectorAll('a')
    const hrefAllowed = new RegExp("://")
    const hrefReject = new RegExp("\^http://internal.com")
    link.forEach(el => {
        let text = el.textContent as string
        if (text.match(hrefAllowed) && !text.match(hrefReject)) {
            el.style.color = 'orange'
        }
    })

    //     ?–£ –Ω–∞—Å –µ—Å—Ç—å –¥–µ—Ä–µ–≤–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–∞–∫ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏ ul/li.
    //     ?–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–µ–¥–µ—Ç –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ <li>:
    //     ?–ö–∞–∫–æ–π –≤ –Ω—ë–º —Ç–µ–∫—Å—Ç (–±–µ–∑ –ø–æ–¥–¥–µ—Ä–µ–≤–∞) ?
    //     ?–ö–∞–∫–æ–µ —á–∏—Å–ª–æ –ø–æ—Ç–æ–º–∫–æ–≤ ‚Äì –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö <li> (–≤–∫–ª—é—á–∞—è –≥–ª—É–±–æ–∫–æ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ) ?

    let liElements = document.querySelectorAll('#taskSPrirodoy   li')
    for (let li of liElements) {
        console.log(li.firstChild?.textContent?.trim() + ' ' + li.querySelectorAll('li').length)
    }

    //! PRAKTIKA

    // ?–ó–∞–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—É–Ω–∫—Ç–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–º–æ—â—å—é prompt.
    // ?–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —ç–ª–µ–º–µ–Ω—Ç <li> –∏ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –µ–≥–æ –∫ <ul>.
    // ?–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Ç–º–µ–Ω–∏—Ç –≤–≤–æ–¥ (–Ω–∞–∂–∞—Ç–∏–µ–º –∫–ª–∞–≤–∏—à–∏ Esc –∏–ª–∏ –≤–≤–µ–¥—è –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É).
    // ?–í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ–ª–∂–Ω—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏.
    // ?–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç HTML-—Ç–µ–≥–∏, –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –∫–∞–∫ —Ç–µ–∫—Å—Ç.
    let ulForTask = document.querySelector('#ulForTask') as HTMLUListElement
    let inputList = document.querySelector('#inputList') as HTMLInputElement
    let buttonList = document.querySelector('#buttonList') as HTMLButtonElement

    buttonList.addEventListener('click', function () {
        let newli = document.createElement('li')
        newli.textContent = `${inputList.value}`
        ulForTask.append(newli)
        inputList.value = ''
        inputList.focus()
    })

    //?–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é createTree, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ ul/li –∏–∑ –æ–±—ä–µ–∫—Ç–∞.
    let data = {
        "–†—ã–±—ã": {
            "—Ñ–æ—Ä–µ–ª—å": {},
            "–ª–æ—Å–æ—Å—å": {}
        },

        "–î–µ—Ä–µ–≤—å—è": {
            "–û–≥—Ä–æ–º–Ω—ã–µ": {
                "—Å–µ–∫–≤–æ–π—è": {},
                "–¥—É–±": {}
            },
            "–¶–≤–µ—Ç–∫–æ–≤—ã–µ": {
                "—è–±–ª–æ–Ω—è": {},
                "–º–∞–≥–Ω–æ–ª–∏—è": {}
            }
        }
    } as Record<string, any>
    const container = document.getElementById('container') as HTMLUListElement

    function createTree(container: HTMLUListElement, data: Record<string, any>) {
        for (let key in data) {
            if (Object.keys(data[key]).length) {
                const li = document.createElement('li')
                li.innerHTML = `${key}<ul></ul>`
                container.append(li)
                const ul = li.querySelector('ul') as HTMLUListElement
                createTree(ul, data[key])
            } else {
                container.insertAdjacentHTML('beforeend', `<li>${key}</li>`)
            }
        }
    }

    createTree(container, data)


    //?–ï—Å—Ç—å –¥–µ—Ä–µ–≤–æ, –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –≤ –≤–∏–¥–µ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Å–ø–∏—Å–∫–æ–≤ ul/li.
    // ?–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–∏—Ç –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É —Å–ø–∏—Å–∫–∞ <li> 
    // ?–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤ –Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –£–∑–ª—ã –Ω–∏–∂–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è, –±–µ–∑ –¥–µ—Ç–µ–π ‚Äì –ø—Ä–æ–ø—É—Å–∫–∞–π—Ç–µ.
    for (let li of liElements) {
        if (li.querySelectorAll('li').length > 0) {
            li.firstChild!.nodeValue = `${li.firstChild!.textContent} [${li.querySelectorAll('li').length}]`
        }
    }

    // ?H–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é createCalendar(elem, year, month).
    let dateTable = document.getElementById('dateTable') as HTMLTableElement
    function createCalendar(elem: HTMLTableElement, year: number, monthUser: number) {
        let week = '<tr>'
        let date = new Date(year, monthUser - 1, 1)
        let firstDay = date.getDay()
        console.log(firstDay)
        for (let i = 0; i < firstDay; i++) {
            week += `<td>„ÉÑ</td>`
        }
        console.log(date.getMonth())
        while (date.getMonth() == monthUser - 1) {
            week += `<td>${date.getDate()}</td>`;
            if (date.getDay() == 6) {
                week += '</tr><tr>';
            }
            date.setDate(date.getDate() + 1);
        }
        if (date.getDay() != 0) {
            for (let i = date.getDay(); i < 7; i++) {
                week += '<td></td>';
            }
        }
        elem.innerHTML += week

    }
    createCalendar(dateTable, 2024, 6)


    // –°–æ–∑–¥–∞–π—Ç–µ —Ü–≤–µ—Ç–Ω—ã–µ —á–∞—Å—ã 
    const extremistClock = document.getElementById('extremistClock') as HTMLDivElement
    const btnClock = document.getElementById('btnClock') as HTMLButtonElement

    let currentTime = document.createElement('h3')
    function printextremistClock() {
        let hour = new Date().getHours() > 9 ? new Date().getHours() : `0${new Date().getHours()}`
        let minutes = new Date().getMinutes() > 9 ? new Date().getMinutes() : `0${new Date().getMinutes()}`
        let seconds = new Date().getSeconds() > 9 ? new Date().getSeconds() : `0${new Date().getSeconds()}`
        currentTime.innerHTML = `<span id="hours" style="color: red">${hour}</span>:<span id="minutes" style="color: green">${minutes}</span>:<span id="seconds" style="color: blue">${seconds}</span>`
        extremistClock.appendChild(currentTime)
        setTimeout(printextremistClock, 1000)
    }
    btnClock.addEventListener('click', function () {
        printextremistClock()
    })


    // ?–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ <li>2</li><li>3</li> –º–µ–∂–¥—É —ç—Ç–∏–º–∏ –¥–≤—É–º—è <li>
    let ulTask9 = document.getElementById('ulTask9') as HTMLUListElement
    ulTask9.firstElementChild?.insertAdjacentHTML('beforeend', `<li>2</li><li>3</li>`)




    //? –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é showNotification(options),
    //?  –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: <div class="notification"> —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º. 
    //?  –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å—á–µ–∑–Ω—É—Ç—å —á–µ—Ä–µ–∑ 1,5 —Å–µ–∫—É–Ω–¥—ã.
    function showNotification(y = '0', x = '0', html = 'asdadada') {
        let notification = document.createElement('div')
        notification.style.top = `${y}px`
        notification.style.position = 'fixed'
        notification.style.right = `${x}px`
        notification.innerHTML = html
        document.body.insertAdjacentElement('afterbegin', notification)
        setTimeout(() => notification.remove(), 1500)
    }
    setInterval(() => { showNotification('10', '0', '<img src="https://yt3.googleusercontent.com/bRxpLuKan-5TAGEdooDE35CTPXr-59xEhwlt_w1BHY2rzc1hQBdpfVLo0a95p9bYbBObUkmsfw=s900-c-k-c0x00ffffff-no-rj" alt="Stranger">') }, 3000)


    let scrollToOptionsBtn = document.querySelector('#scrollToOptions') as HTMLButtonElement
    // scrollToOptionsBtn.addEventListener('click', function () {
    //     window.scrollTo({
    //         top: 500,
    //         left: 0,
    //         behavior: 'smooth'
    //     })
    // })


    // ! –†–∞–∑–º–µ—Ä—ã –∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤

    //      –°–≤–æ–π—Å—Ç–≤–æ elem.scrollTop —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–∫—Ä—É—á–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–∏ –æ—Ç—Å—á—ë—Ç–µ —Å–≤–µ—Ä—Ö—É. 
    //      –ê –∫–∞–∫ –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ —Å–Ω–∏–∑—É (–Ω–∞–∑–æ–≤—ë–º –µ–≥–æ scrollBottom)?
    //      –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ elem.
    //      P.S. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: –µ—Å–ª–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –Ω–µ—Ç –≤–æ–æ–±—â–µ –∏–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–∫—Ä—É—á–µ–Ω ‚Äì –æ–Ω–æ –¥–æ–ª–∂–Ω–æ –¥–∞–≤–∞—Ç—å 0.
    let scrollBottom = document.body.scrollHeight - document.documentElement.scrollTop
    console.log(scrollBottom)

    //      –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —à–∏—Ä–∏–Ω—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏.
    //      –î–ª—è Windows –æ–Ω–∞ –æ–±—ã—á–Ω–æ –∫–æ–ª–µ–±–ª–µ—Ç—Å—è –æ—Ç 12px –¥–æ 20px.  
    //      –ï—Å–ª–∏ –±—Ä–∞—É–∑–µ—Ä –Ω–µ –≤—ã–¥–µ–ª—è–µ—Ç –º–µ—Å—Ç–æ –ø–æ–¥ –ø–æ–ª–æ—Å—É –ø—Ä–æ–∫—Ä—É—Ç–∫–∏(—Ç–∞–∫ —Ç–æ–∂–µ –±—ã–≤–∞–µ—Ç, –æ–Ω–∞
    //      –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–π –Ω–∞–¥ —Ç–µ–∫—Å—Ç–æ–º), —Ç–æ–≥–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å 0px.
    let scrollWidth = document.body.offsetWidth - document.body.clientWidth
    console.log(scrollWidth)

    const ball = document.getElementById('ball') as HTMLImageElement
    const field = document.getElementById('field') as HTMLDivElement
    let x = field.clientWidth / 2
    let y = field.clientHeight / 2
    let ballX = ball.clientWidth / 2
    let ballY = ball.clientHeight / 2
    ball.style.left = (x - ballX) + 'px'
    ball.style.top = (y - ballY) + 'px'

}

// //? –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–∫–∏ geo –∏–∑ current –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
// {
//     // let latitude
//     // let longitude
//     // function getlocation() {
//     //     if (navigator.geolocation) {
//     //         navigator.geolocation.getCurrentPosition(savePosition)
//     //     } else {
//     //         console.log("Geolocation is not supported by this browser.")
//     //   }

//     // }
//     // // @ts-ignore
//     // function savePosition(position) {
//     //     latitude = position.coords.latitude
//     //     longitude = position.coords.longitude
//     //     console.log("Latitude: " + latitude + ", Longitude: " + longitude)
//     // }
//     // getlocation()

//     const accesKey = "mHQcEWgeYpwQPfvGvbofjGAVs3eqF_WcG7Cpb7jkeHw"
//     const geoPhoto = document.getElementById('geoPhoto') as HTMLDivElement
//     let keyword = ''

//     function getlocation() {
//         fetch("https://ipapi.co/json/")
//             .then((response) => response.json())
//             .then((data) => {
//                 keyword = data.city
//                 console.log("City: "+ data.city +"\nIP: "+ data.ip)
//                 const geopositionText = document.createElement('h4')
//                 geopositionText.textContent = `Are you from ${data.city} ?`
//                 geopositionText.id = 'geopositionText'
//                 geoPhoto.appendChild(geopositionText)
//                 searchImages(keyword)

//             })

//     }

//     getlocation()

//     async function searchImages(keyword: string) {
//         const url = `https://api.unsplash.com/search/photos?per_page=1&query=${keyword}&client_id=${accesKey}`


//         //await –∂–¥–µ—Ç, –ø–æ–∫–∞ –∑–∞–ø—Ä–æ—Å –∫ API –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è, –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π response
//         const response = await fetch(url) //etch(url)  HTTP-–∑–∞–ø—Ä–æ—Å –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É url

//         //response.json(): –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–∞—Ä—Å–∏—Ç —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –∫–∞–∫ JSON
//         const data = await response.json() //await: –ñ–¥–µ—Ç, –ø–æ–∫–∞ –ø—Ä–æ–º–∏—Å –æ—Ç response.json() –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è, –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π data


//         const results = data.results

//         results.map((result: any) => {
//             const image = document.createElement('img')
//             image.src = result.urls.regular
//             image.id = 'geopositionPic'
//             const imageLink = document.createElement('a')
//             imageLink.href = result.links.html
//             imageLink.target = '_blank'

//             imageLink.appendChild(image)
//             geoPhoto.appendChild(imageLink)
//         })
//     }
// }
// @id:marqu3s.aurora-x